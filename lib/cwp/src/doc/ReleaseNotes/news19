CWP Software Update: 4/01/93  (19th edition)

The new compressed tars are available at our anonymous ftp Internet address:
	hilbert.mines.colorado.edu
	or
	138.67.12.63
Remark: some users have noted that to see the filenames, they have to
use the command 'mls' instead of the standard unix command 'ls'.


New Program:
sufdmod2 - Finite-Difference MODeling (2nd order) 2D acoustic wave equation
	   (adapted for SU by John Stockwell from a code by Dave Hale)


Bug Fixes:
segyread
pscube - major rewrite by Craig Artley--Craig's notes follow:

I wrote and installed a new version of pscube last week.  You should
notice considerable improvement in the images of the top and side of
the cube.  I also cleaned up the data input scheme.  Three input formats
are now supported:
	1. Entire data volume read from stdin.  Program picks off the
	   appropriate data samples for the three faces.  [Default
	   format, same as before]
	2. Data for just the three faces read from stdin.  First n1*n2
	   samples are front, followed by n1*n3 for side, and n2*n3 for
	   top.  [Specify faces=1]
	3. Data for three faces read from three separate data files.
	   [Specify filenames with front=, side=, and top= parameters]

If you use the first format, you will notice significant performance
improvement with large data sets.  Before, the entire 3-D volume was
read into memory.  Now, data are read one trace at a time.  Only the
samples that appear on a face of the cube are saved in memory.

The latter two formats are useful if you want to plot slices extracted
from a volume using subset, for example.

Furthermore, the x1beg/x1end, etc., parameters can now be specified, as
in the other programs in the CWP psplot family.

	-craig 03/15/93
-----------
Those interested in the guts of the code might like to read on.  The
old pscube painted the three faces of the cube as a single image.  To
do this, the side and top data were mapped to the corresponding faces
through stretching operations.  Still, the resulting image was distorted
because the image pixels were all rectangular.  The pixels on the top
and side, however, should be parallograms---i.e., rectangles skewed by
the projection angle.  This gave the top and side a rough and jagged
appearance.

I started from scratch and borrowed heavily from psimage.  The three
faces are now drawn as three separate images, and the projection is
applied through PostScript's transformation matrix operators.  Not only
is the result significantly better, the code is also much simpler.  Once
you figure out the appropriate transformations for the three faces, the
rest is straightforward.  PostScript does the work.

The axes drawing routine is largely unchanged from the original by
Zhiming Li and Dave Hale.  I changed the name from psAxes3 to the more
descriptive psCubeAxesBox, and it is now kept in a file of its own in
the lib directory.  I also applied some minor bug fixes supplied by Dave
Hale.  The old psCubeSub.c has been removed, because the remaining
functions therein are now obsolete.

The face selection logic of input format 1 (entire cube) is quite basic.
Rather than make it more sophisticated (and the code more complicated),
I decided that users would be better served by extracting slices from
a volume using subset.  Perhaps someone could write a nice shell script
to make this even more convenient.

Also, someone could add the ability to set plot clips for the three
faces independently.  Currently, the same clip parameters are used for
all of the faces.

