CWP Software Update: 03/25/94  (23th edition)


The new compressed tars are available at our anonymous ftp
Internet address:  hilbert.mines.colorado.edu
or
138.67.12.63
The directory path is: pub/cwpcodes	

The files you will need are (xx stands for the number of
the current release):
README_BEFORE_UNTARRING
untar_me_first.xx.tar.Z
cwp.su.all.xx.tar.Z

For incremental updating, instead take:
README_TO_UPDATE
update.yy.to.xx.tar.Z
update.list

For detailed information on the free materials currently
available from CWP (Center for Wave Phenomena), send e-mail
to:
cwpinfo@dix.mines.colorado.edu
and
samizdat@dix.mines.colorado.edu

***SU won the 1994 University Award of the Colorado Chapter of
Technology Transfer Society.  Part of what sold them were the nice
things you said about us, so thank you!

***Our ftp site was down for two weeks in February.  Sorry if this
inconvenienced you.

***We have written some demos to help the new (and maybe also
advanced) SU user, see ${CWPROOT}/src/demos/README for more
information.  Please let us have feedback if you try these.
 
***Back by popular demand!  suwind once again really _windows_
That is, suwind now does time gating as well as trace subsetting.
The time gating does not resample, use suresamp, if you need that.
Caveat: this was a last minute change and the Trace_Selecting demo
(see above) doesn't yet illustrate this usage.

New Programs
------------
New byte swapping facilities have been added by John Stockwell with
major assistance from Jens Hartmann.

cwp/lib/swapbyte.c -- byte swapping routines for the standard C types
par/main/swapbytes.c -- drivers for the above
su/main/suswapbytes.c -- byte swaps su traces (both header and data)

par/main/dt1tosu.c -- converts GPR data in the Sensors & Software's
DT1 format to SU format.  (GPR == Ground Penetrating Radar)

par/main/unif2.c -- produces a uniformly sampled velocity model from
a "cshot style" input file (program contains option to produce a
template).  Zhenyue Liu.

par/main/smoothint2.c -- smooths the interfaces in a "cshot style"
model file.  Zhenyue Liu.


Modifications
------------
su/main/segyread.c, segywrite.c -- added option for byte swapping

su/main/suascii -- added option for printing only the trace headers

su/main/suwind -- added option for simple time gating (see above)

cwp/include/cwp.h -- added some portability defines

par/main/farith.c -- options added to compute slowness and sloth perturbations

par/lib/atopkge.c -- rewritten (and greatly simplified) to use ANSI C routines.

par/lib/getpars.c -- absorbed a re-entrant version of initargs.c. John Anderson

par/lib/modeling.c -- collected routines common to su/main/susynlv.c, susynlvcw.c, susynvxz.c

cwp/lib -- related routines consolidated into packages

cwp/lib/polar.c -- subroutines for transforming between rectangular and polar coordinates


Bugs, Fixes, Work-arounds
------------
su/main/sufrac.c:
Allows negative powers of frequencies.  Added option
to specify phase separately.  Zhenyue Liu & John Stockwell

------------
su/main/sumigps.c:
Fixed a bug that disabled the intended velocity 
interpolation.  Thanks to Dave McCowan for this fix.

------------
su/main/susynlv.c, susynlvcw.c, susynvxz.c:
Fixed array bound error in subroutine makeref.  Thanks to
Eric Verschuur for pointing out the offending line.

------------
xwigb, pswigb (called by suxwigb, supswigb):
The wiggle traces produced by these programs do not have
high enough resolution for very dense wiggle plots (i.e.
many traces per inch).  For now, use ximage, psimage
(suximage, supsimage) as a workaround.

We have received a patch that fixes this from 
Martijn van de Runstraat.  We hope to include this fix
in the next release.

------------
pswigb:
The numbering of the axesbox sometimes exceeded the axesbox.
It happened when you typed (for instance):

pswigb n1=256 wbox=2.5 hbox=2 x2beg=60 x2end=120 i=200 d2num=20 x1beg=60 x1end=150 <datfile >traces.ps

This has now been fixed by Craig Artley.

Thanks to Martijn van de Runstraat for pointing out this problem.

------------
general:  Thanks to Tony Kocurko for hunting down the last few (we hope)
non-ANSI memory handling usages.

