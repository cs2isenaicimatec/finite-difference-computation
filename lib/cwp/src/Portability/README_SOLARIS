README  SOLARIS						21 June 1995

On most systems, the compiler you want to use is:
/opt/SUNWspro/bin/cc

However, you may also use gcc.


In Makefile.config
Use:
# The following OPTC should be used under Solaris
OPTC = -O -D_solaris_2_x_  -DSUN

The -DSUN flag is necessary for the programs "suinterp" and
"suradon" to work properly.

# C compiler
CC = /opt/SUNWspro/bin/cc

or

CC = /the/path/to/gcc

where /the/path/to is the actual path to gcc.

#Load link path
LD_LIBRARY_PATH = /lib/path1:/lib/path2:   etc...

where the /lib/path's are the list of appropriate library link
paths for your compiler, including X-windows paths. This is
often set as a shell environment variable, rather than explicitly
set in Makefile.config.

# uncomment this to add  $(CWPROOT)/lib to the LD_LIBRARY_PATH
LD_LIBRARY_PATH += $(CWPROOT)/lib

# to use this line for RANLIB (also for SOLARIS)
RANLIB = ar -ts

# use this under SOLARIS, if using the native C compiler
CPP = /usr/ccs/lib/cpp

# X11 include path
IX11 = /usr/openwin/include

# X11 library path
LX11 = /usr/openwin/lib

Solaris is a strict System V UNIX system with an ANSI C compiler.
Most other items should compile ok.

Many thanks to Dave Holmgren of the   Department of Astronomy,
University of Western Ontario, London, Ontario  and to
Paul Docherty of the Bullard Laboratories at Cambridge University,
for help in updating this file. Thanks also to Tony Kocurko
of the Memorial University of Newfoundland for the original information
on Solaris installs.

Please feel free to email me with questions or comments concerning
the codes.


Thanks to Lorraine Wolff of Auburn for the following report.
>I can't get the code to compile because my compiler can't find
> "bzero" or "bcopy"--how can  I fix this?

We try to keep to the ANSI standard, but sometimes old
style calls creep in. The problem of rooting these things out
is exacerbated because many systems still support the old style calls.

If you have trouble installing
because your compiler can't find "bcopy" or "bzero"
make the following replacements.

Replace all statements of the form

bzero( a, b);

with statements of the form:

memset( (void *) a , (int) '\0', b );

Please replace all instances
of statements of the form of:

bcopy ( a , b, c);

with a statements of the form:

memcpy( (void *) b, (const void *) a, c );

Information about SunOS (Solaris) 5.6 from Joe Dellinger of BP-Amoco.

Notes about compiling on SunOS (Solaris) 5.6 if you don't have X11R5, etc,
but have to rely on the generic stuff you get from Sun:

1) I wanted to compile statically "as much as possible". It's not
   possible to compile entirely statically because some Sun libraries
   only exist in their dynamic versions. Generally we prefer to compile
   statically whenever possible as it ensures that a given executable
   will still run later on when you urgently need it, even if the
   compiler, X distribution, OS, etc, have been upgraded in the meantime.

2) I tried to avoid having to change the actual makefiles.

3) Note you don't need to use XDR on the Suns because XDR format is Sun's
   native format. (That is good because I couldn't get it to work.)

4) I used the following for compilation. I'm not sure whether the -DSUN
   is necessary:

OPTC = -O -DSUN

5) For the non-X stuff it's easy. Use the following PRE and POST link flags:

PRELFLAGS = -Bstatic
POSTLFLAGS = -Bdynamic -ldl -Bstatic

   This will link things as statically as possible. To link dynamically,
   just leave out the -B toggles entirely (or put a -Bdynamic at the start
   to be sure).

6) Here are the includes and libraries to use for X and Motif stuff:

IX11 = /usr/openwin/include
LX11 = /usr/openwin/lib
IMOTIF = /usr/dt/include
LMOTIF = /usr/dt/lib

7) Now the hard part. All the stuff you need for compiling the X codes IS
   in the Sun X and Motif libraries, but they have moved stuff around and
   added dependencies to LOTS of other libraries, which drag in yet more
   libraries, which drag in yet more libraries, etc, until you need a truly
   frightening number of libraries at link time to make things work.

   Just to make things more confusing, under Solaris 5.6 some (but only some)
   of the required libraries only exist in their dynamic version. The following
   link line is designed to link "as statically as possible":

PRELFLAGS = -L/usr/openwin/lib -L/usr/dt/lib -Bdynamic -lXm -lSM -lICE -Bstatic
POSTLFLAGS = -Bdynamic -lgen -lsocket -ldl -Bstatic -lXext -lform -lnsl -lintl

   The Xm, SM, ICE, gen, socket, and dl libraries only exist dynamically.

   DON'T use the above linker flags for non-X things because then they will
depend on all the dynamic X libraries, even though they never use them. (!)

   If you'd rather link the X stuff dynamically then just get rid of all the
-B toggles above. In that case you'll also find that the precise order of the
libraries on the link line becomes somewhat less critical.

   The above link flags will not work for the Motif stuff, because -lXm only
exists in dynamic form, and the Motif makefiles refer to -lXm in the middle of
other stuff that does exist statically. So either remove the "-Bstatic" entries
above when you're compiling the Motif programs, or edit the Makefile in
Xmcwp/main to replace "-lXm" with "-Bdynamic -lXm -Bstatic".

   Future versions of Solaris are rumored to have no provision for static
linking at all. In this case to make "distributable executables" you have
to use "ldd" to identify all the libraries required by a given executable,
then package those up with the executable along with a script that sets
the LD_LIBRARY_PATH to point at the necessary runtime libraries and only then
runs the executable. More and more this is what we are having to go to to
distribute reliable (ie, self-contained) executables within BP Amoco.
(This is necessary because we can't count on every site having installed
their compilers in the same locations, to be at the same compiler revision
level, etc.)

-- Joe Dellinger

John Stockwell	 | john@dix.Mines.EDU
Center for Wave Phenomena (The Home of Seismic Un*x)
Colorado School of Mines
Golden, CO 80401 | http://www.cwp.mines.edu/cwpcodes
voice: (303) 273-3049  |    fax: (303) 273-3478.
