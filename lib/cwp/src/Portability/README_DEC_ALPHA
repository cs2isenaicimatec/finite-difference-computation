README DEC					6 March 

If you are installing on a DEC Alpha system running the Linux operating
system, then you should be able to follow the instructions in README_LINUX
and have no trouble installing the codes. The comments below refer
to installs with the native DEC Alpha compiler.

DEC Alpha:
Thanks to Mike Begnaud of UC Davis, we have included some
DEC Alpha support. You may use the default CC compiler for
installing the codes on the DEC Alpha. There may still be
some conflicting usages of "long" and "int" left in the codes,
requiring some hacking by the user doing the installation.
However, the package should largely install.

6 March 1997 Update.
Apparently, changes made in the CWP/SU package have caused problems
with the X-codes in Releases 29 and 30. Without
a DEC Alpha platform available to us, it will be some time before
these problems can be repaired.

Thanks to the efforts of Gilles Grandjean of BRGM DR/GIG BP,
in Orleans, France, we have an alternate installation method that will
permit you to use all of the codes on DEC Alpha, with the exception
of xcontour and suxcontour.

Instructions for installing the CWP/SU codes on DEC Alpha.

First install  GNU Make  (see README GNU_MAKE for further information
about this version of "make"). Several users who were not able to
compile anything at all were the victims of the poor version of "make"
that comes with the native DEC Alpha operating system. Set the
appropriate flags in $CWPROOT/src/Makefile.config for GNU make installs.

If you use the native DEC   "cc"  compiler, you will be able to
compile everything, but you will notice that some or all X-codes will not work.
If somebody would like to help the SU project by installing under the
default "cc" compiler and would like to help me debug the X-codes,
this would be a great help to the CWP/SU project.
If you want to do this, let me know and I will email you the
Release 28 version of the X-codes, which
should work on DEC Alpha with the native cc compiler. I would then
supply you with incremental updates, which should hopefully reveal where
the bug is located. The nature of the bug is probably simple. It may
be the result of

The alternative is to install GCC (See README_GCC for further information).

Here are changes in Makefile.config that you will have to make if you
are installing with GCC and GNU Make.

...
...
Change:

# Use this ENDIANFLAG for PC and DEC products (Linux PC's and the like)
#ENDIANFLAG = -DCWP_LITTLE_ENDIAN

to:

# Use this ENDIANFLAG for PC and DEC products (Linux PC's and the like)
ENDIANFLAG = -DCWP_LITTLE_ENDIAN

...
...

Change:

# Target flags for 'GNU make' installs (do this under Linux)
#ITARGET = $I/%: %
#SHTARGET = $B/%: %.sh
#CTARGET = $B/%: %.c
#C++TARGET = $B/%: %.cc
#XAPPTARGET = $R/%: %
#XTITARGET = $I/Xtcwp/%: %
#XMITARGET = $I/Xmcwp/%: %
#ITRITARGET = $I/Triangles/%: %
#IWPCTARGET = $I/Wpc/%: %
#IDCTTARGET = $I/Dct/%: %
#IRFLTARGET = $I/Reflect/%: %

To:

# Target flags for 'GNU make' installs (do this under Linux)
ITARGET = $I/%: %
SHTARGET = $B/%: %.sh
CTARGET = $B/%: %.c
C++TARGET = $B/%: %.cc
XAPPTARGET = $R/%: %
XTITARGET = $I/Xtcwp/%: %
XMITARGET = $I/Xmcwp/%: %
ITRITARGET = $I/Triangles/%: %
IWPCTARGET = $I/Wpc/%: %
IDCTTARGET = $I/Dct/%: %
IRFLTARGET = $I/Reflect/%: %

...
...

Change:

########################################################################
# standard make line; change only if you are using a different 'make'
MAKE = make

To:
########################################################################
# standard make line; change only if you are using a different 'make'
MAKE = /appropriate/path/make

(here '/appropriate/path/make'  (is the full path to, and correct name of
"GNU  Make" as you have installed it on your system.)
...
...

Change:
########################################################################
# C compiler; change this only if you are using a different C-compiler
CC = cc

To:
########################################################################
# C compiler; change this only if you are using a different C-compiler
CC = gcc

Change:
# under IRIX (Silicon Graphics), you probably will have
# to use this line for RANLIB (also for SOLARIS)
#RANLIB = ar -ts

To:
# under IRIX (Silicon Graphics), you probably will have
# to use this line for RANLIB (also for SOLARIS)
RANLIB = ar -ts

...
...

Change:
# under Solaris and IRIX, with gcc compiler, use:
#CPP = gcc -E
# make sure the path to gcc matches that in the CC = line

to:
# under Solaris and IRIX, with gcc compiler, use:
CPP = gcc -E
# make sure the path to gcc matches that in the CC = line




John Stockwell	 | john@dix.Mines.EDU
Center for Wave Phenomena (The Home of Seismic Un*x)
Colorado School of Mines
Golden, CO 80401 | http://www.cwp.mines.edu/cwpcodes
voice: (303) 273-3049  |    fax: (303) 273-3478.
