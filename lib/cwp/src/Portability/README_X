README_X  					15  August 2002

Info regarding CWP X-windows codes.

a) Know thy system. While X is allegedly a standard system, it
   seems that every vendor installs the X windows  libraries and 
   include files under a different path.
   Also, compiling under a strict ANSI requirement may not be the
   best idea. Your version of the X-toolkit may not be fully ANSI,
   or your compiler may not be very forgiving with regard to your own
   non-ANSI-isms.

b) Version of X.
   Our current version of X-windows is X11-R6. If you look in
   /usr/include/IntrinsicP.h (or your equivalent) the version
   of X is given by the following entry:

	#define XT_REVISION 6 
   Our X codes should run under X11-R3, X11-R4, and X11-R5, as well.

c) Motif. Only 1 CWP X-code depends on the Motif Developer's Package.
   This code is contained in Xmcwp/main and is not intrinsic to the
   CWP/SU package. (It's a nice program, though. It demonstrates aspects
   of the Fourier tranform.) Note: it is possible to be running the
   Motif Window Manager, but not have the Motif Develper's package.
   The Motif Developer's Package consists of include files with names like:
   Xm.h and with libraries with names like libXm.a.

   *** Update: 31 July 1997 *** there is a free Motif-like Developer's 
   package called "Lesstif" which may be substituted for Motif on 
   many systems. Please see: README_LESSTIF for further information.

d) environment variable.
   To take advantages of the appdefaults that we use at CWP you
   need to have the variable  XAPPLRESDIR set
   to  /your/root/path/lib/X11/app-defaults/ in your shell.

   In Korn shell, this is done by having the line

	export XAPPLRESDIR=/your/root/path/lib/X11/app-defaults/

   in your .profile file. The directory /your/root/path is the
   ROOT path discussed at length in README_TO_INSTALL.

   In C-shell this is done by

	setenv XAPPLRESDIR /your/root/path/lib/X11/app-defaults/

   Another (preferred) way is to set the environment variable:

   XFILESEARCHPATH 
   to:		/your/root/path/lib/X11/%T/%N%S:/usr/lib/X11/%T/%N%S
   
   The procedure is similar to that stated above for XAPPLRESDIR

e) Display PostScript: there are a few applications located in
   /your/root/path/src/xplot/main  that are X-windows based PostScript
   previewers. These codes depend on the DPS  Display PostScript
   libraries being present. These codes may be compiled by changing the
   line in the ../src/xplot/main/Makefile that reads:

INSTALL:	$(PROGS)

to 

INSTALL:	$(PROGS) $(PSPROGS)

   I would suggest however, that you not do this until you have installed
   all the other codes in the package successfully. These items are home-
   grown PostScript Previewers that are non-essential to the operation of
   the CWP/SU package and are included as examples, only. (Though they
   do work well!) The only code that you *should* use in this set is xpsp.

f) Xtcwp: Though there is no Motif-dependent stuff in here anymore,
   apparently linking to the Motif libraries "polishes" the color definitions.
   We ship the ../src/Xtcwp/Makefile with the following linking flags set:

LDFLAGS = $(PRELFLAGS) -L$L -lXtcwp -lpar -lcwp -lXt -lX11 -lm $(POSTLFLAGS)

  but if you have the Motif Developers Package and want to take advantage
  of the "polishing" feature, use this LDFLAGS line instead:

LDFLAGS = $(PRELFLAGS) -L$L -lXtcwp -lpar -lcwp -lXm -lXt -lX11 -lm $(POSTLFLAGS)

  (By polishing, we mean that there are different versions of the X-toolkit
   items that are contained in the Motif libraries that get used instead
   of the actual Toolkit versions.)

g) Installation help:
   Check contents of Portability subdirectories for further info.
   However, some of these may be only useful as models for porting,
   rather than actual substitutions.
              
   Xtcwp:  For users of non-Motif systems, I have (I hope)
	      purged the libraries of the remaining Motif
	      dependent items. These have been placed
              in Xmcwp.

>Finally, on most systems that I have installed these codes on,
>you get a pile of warnings about "incompatible pointer types."
>The warnings probably can be fixed through the application of
>explicit casts. We just haven't gotten to this, yet.
>The code seems to run OK in spite of these warnings.
17 Feb 1995. I believe I have fixed most of those. Let me know
   if you still see any. - J. Stockwell


h) GCC,GLIBC - In past instructions we told people to use gcc with the
   glibc library routines. On SUN, many users have found that the
   X-windows codes will not install using gcc and the glibc libraries.
   There are incompatibilities with the X-windows distribution on SUN
   and the glibc libraries. It is best to use gcc *without* using glibc
   for installing the X-windows codes.

   You may be able to reset the LD_LIBRARY_PATH  variable so the 
   system's native C libraries are seen instead of the GLIBC libraries
   (and vice versa).

i) DefaultColorDepth - A problem which is becoming more common is
   that some X servers will be set up with the DefaultColorDepth
   set to 8 bits. CWP/SU graphics used to be 8 bit only, but now
   you need to set your colordepth to 16 bit or higher.

John Stockwell	 | john@dix.Mines.EDU
Center for Wave Phenomena (The Home of Seismic Un*x)
Colorado School of Mines
Golden, CO 80401 | http://www.cwp.mines.edu/cwpcodes
voice: (303) 273-3049  |    fax: (303) 273-3478.
