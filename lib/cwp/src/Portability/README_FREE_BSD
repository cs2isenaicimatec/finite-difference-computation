README for Free BSD                                    21 April 1997

Thanks to Natasha Hendrick of the University of Queensland in Australia
for some of the information that follows.

The following instructions are for the Free BSD operating system
which may be installed on Intel-based PC's. Many aspects of
Free BSD are similar to Linux, however, there are important
differences.

To install on a Free BSD system, you will probably have to do
the following:

First, install GNU Make.

The BSD make does not seem to be compatible with the CWP/SU Makefile
structure.  See README_GNU_MAKE for further information.


Relevant entries in Makefile.config:

Uncomment LITTLE_ENDIAN flag:

# Use this ENDIANFLAG for PC and DEC products (Linux PC's and the like)
ENDIANFLAG = -DCWP_LITTLE_ENDIAN

Uncomment GNU make Target flags:

# Target flags for 'GNU make' installs (do this under Linux)
ITARGET = $I/%: %
SHTARGET = $B/%: %.sh
CTARGET = $B/%: %.c
C++TARGET = $B/%: %.cc
XAPPTARGET = $R/%: %
XTITARGET = $I/Xtcwp/%: %
XMITARGET = $I/Xmcwp/%: %
ITRITARGET = $I/Triangles/%: %
IWPCTARGET = $I/Wpc/%: %
IDCTTARGET = $I/Dct/%: %
IRFLTARGET = $I/Reflect/%: %

Set MAKE =    to whatever you are calling "GNU Make" on your system:

########################################################################
# standard make line; change only if you are using a different 'make'
MAKE = gmake

Is "gcc" different from "cc" on your system, if so set CC = accordingly:

########################################################################
# C compiler; change this only if you are using a different C-compiler
CC = gcc


Uncomment LD_LIBRARY_PATH line:

# under SUN OS and Linux  uncomment the next line
LD_LIBRARY_PATH += $(CWPROOT)/lib


Set CPP =    to the appropriate path:

#############################################################################
# C preprocessor (cpp) definition
# use this under IRIX if using the native cc compiler
#CPP = /lib/cpp

CPP = /usr/bin/cpp       (check to see if it really is there)


Or use:

# under Solaris and IRIX, with gcc compiler, use:
CPP = gcc -E


Set the X include and library paths to reflect the locations of
these on your system:

####
## The following paths would be used under Linux
## and possibly under SCO Unix installs
## On some systems you may need to make the symbolic link:
##                # ln -s /usr/X11R6 /usr/X386 
# X11 include path
IX11 = /usr/X386/include

# X11 library path
LX11 = /usr/X386/lib
####


John Stockwell	 | john@dix.Mines.EDU
Center for Wave Phenomena (The Home of Seismic Un*x)
Colorado School of Mines
Golden, CO 80401 | http://www.cwp.mines.edu/cwpcodes
voice: (303) 273-3049  |    fax: (303) 273-3478.
