'(
name: SUREAD
label: "Read SU stream"
value_tab: 32

parameter: CHOOSE1
text: "Choose type of input"
type: choose:
type_desc: (
   ("SU_command" 0 "Pipe output from SU command to input to this module.")
   ("SU_data_file" 1 "Will read input data directly from SU file." )
   ("SU_command_file" 2 "Will enter name of SU command file and read output from the SU program suput." ) )
value: 0
mouse_text: "Choose type of input SU data stream."

parameter: CMND
text: "SU command"
type: edit:
type_desc: (70 80 24
"Enter one or a series of SU commands.  The output
data from the last SU module will be piped as
input to this module.  For example, you could enter

suplane | sufilter f=4,6,70,90

You can continue commands from one line to the next
using the backslash.  Comments can be entered on
any line following a # sign. You could also code the previous example as

suplane | \ #this is a modeling code that generates 3 linear events
sufilter f=4,6,70,90  #this applies a trapezoidal band-pass filter" 
12)
value: "suplane"
mouse_text: "Pipe the output of this SU command as the input data to this module. Use EMACS commands to edit this field. "

parameter: CMNDFILE
text: "Path to SU command file including file name."
type: edit:
type_desc: (70 80 3
"This is the input command file name.  Be sure to give a complete
path name because ProMAX may be operating in a different directory
than where your Bourne shell command file is located.  For example:

/usr/home/your_name/file.script

This command file should end with the SU module
suput $1 as the SU stream must be passed on by suput.
For example:

#! /bin/sh
suplane | sufilter f=4,8,50,60 | suput $1
exit"
13)
value: "/u/evans/jeanders/pmx/input/suread/suread.script"
mouse_text: "This is the path to the SU command file.  Suput pipes data to this module. Use EMACS commands to edit this field. "

parameter: DATAFILE
text: "Path to SU data file including file name"
type: edit:
type_desc: (70 80 3
"This is the input SU file name.  Be sure to give a complete
path name because ProMAX may be operating in a different directory
than where you desire to read the file.  For example:

/usr/home/your_name/file.su"
5)
value: "/u/evans/jeanders/suwrite.su"
mouse_text: "This is the path to the SU data file including the file name itself. Use EMACS commands to edit this field. "

parameter: SORT
text: "Sort order of the input data (PKEY=SOURCE, SKEY=SEQNO inside Promax for all choices)"
type: choose:
type_desc: (
   ("Shot_records" 2 "Primary sort key from SU is fldr." )
   ("CDP_gathers" 1 "Primary sort key from SU is cdp." )
   ("Common_receiver_records" 3 "Primary sort key from SU is wevel" ) 
   ("Common_offset_records" 4 "Primary sort key from SU is offset.")
   ("Common_channel_order" 5 "Primary sort key from SU is tracf")
   ("Unknown" 6 "Primary sort key from SU will be tracl")
)
value: 2
mouse_text: "Define the sorted order of the input data.  The primary sort key will also be defined."

parameter: NPENS
text: "Maximum number of traces per ensemble"
type: typein:
type_desc: ( int: 4 1 8192 )
value: 65
mouse_text: "Enter an integer at least as large as the maximum number of traces per ensemble in the input data."

parameter: TYPE
text: "Type of input data"
type: choose:
type_desc: (
   ("Normal_unstacked_data" 0 "Most unstacked data." )
   ("Uphole_data" 1 "Data for picking uphole times." )
   ("Transformed_unstacked_data" 2 "Maybe frequency domain, tau-p, or f-k domain" ) 
   ("Transformed_stacked_data" 3 "Maybe frequency domain, tau-p, or f-k domain")
   ("Normal_stacked_data" 7 "Normal stacked seismic data")
   ("Snapshots" 8 "Movie snapshots from finite difference modeling")
)
value: 0
mouse_text: "Define the type of the input data."

exec_data: ("SUREAD"
		("SPECIAL"
			("TOOLTYPE"     implicit: "INPUT")
		)
		("GENERAL"
		   	("CHOOSE1"     implicit: (value 'CHOOSE1))
		   	("CMND"        implicit: (value 'CMND))
		   	("CMNDFILE"    implicit: (value 'CMNDFILE))
		   	("DATAFILE"    implicit: (value 'DATAFILE))
		   	("SORT"        implicit: (value 'SORT))
			("NPENS"       implicit: (value 'NPENS))
		   	("TYPE"        implicit: (value 'TYPE))
		)
	   )

rules: (
		(rule1
			(=(value 'CHOOSE1) 0 )
				(progn
					(do_show 'CMND)
					(do_not_show 'CMNDFILE)
					(do_not_show 'DATAFILE)
			)
		)
		(rule2
			(=(value 'CHOOSE1) 1 )
				(progn
					(do_not_show 'CMND)
					(do_not_show 'CMNDFILE)
					(do_show 'DATAFILE)
			)
		)
		(rule3
			(=(value 'CHOOSE1) 2 )
				(progn
					(do_not_show 'CMND)
					(do_show 'CMNDFILE)
					(do_not_show 'DATAFILE)
			)
		)
	)

)
