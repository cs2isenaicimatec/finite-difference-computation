Frequently Asked Questions about the CWP/SU codes:

Q:
> What is the data format that SU programs expect?

A:
The SU format is based on the SEG-Y format. The SU format
consists of: "SEGY traces written in the native binary format of
your machine, with the optional fields in the SEGY header
set to zero". SU differs from SEGY in that there is nothing that
corresponds to the binary and ebcdic tape headers in the SU format.


For more information: 
type:    sukeyword
This lists the include file segy.h that defines the su trace header.
This may look complicated at first, but with SU all you need to know
is the "keyword" that represents each SEGY field in the data.

Q:
>Is there any easy way of adding necessary 
>SEG-Y information to our own modeled data to prepare
>our data for processing using the SU package?

A:
If you have a 'datafile'
that is in the form of binary floating point numbers of the type
that would be created by a C program, then use "suaddhead" to
put SU (SEGY) trace headers on the data. Example:

          suaddhead < datafile  ns=NS > data.su

Here: NS is the (integer) number of samples per
trace in the data. The fast dimension of the data set is the
sample number on a trace and the slow dimension is the trace number.


If your data are Fortran-style floats, then you would use:

         suaddhead < datafile ftn=1 ns=NS > data.su

If your data are ASCII, then use:

         a2b n1=N1 < data.ascii | suaddhead ns=NS > data.su

Here N1 is the number of floats per line in data.ascii.


If you have some other data type, then you may use:

         recast < data.other in=IN out=float | suaddhead ns=NS > data.su

where IN is the type (int, double, char, etc...) 

For further information:
Type:  
suaddhead
a2b
recast


Q:
>I used segyread to read a SEGY tape. Everything seems to work fine,
>but when I plot my data with suximage, the window is black. What
>did I do wrong?

A:
When you read an SEGY tape, you need to pipe the data through
segyclean to zero the optional SEGY trace header field. When the
SU programs see nonzero values in the optional field, they try
to display the data as "nonseismic data", using those values
to set the plot parameters.

Q:
>I have some data in Fortran form and tried to convert it to SU data
>via the following:
>
>suaddhead < data.fortran ns=N_SAMP ftn=1 > data.su
>
>but this did not work properly. I am sure that my fortran data
>are in unformatted binary floats. What should I do?

A:
There are some different ways of interpreting the term "unformatted"
with regard to fortran data.

Try:
ftnstrip < data.fortran | suaddhead ns=N_SAMP > data.su

The program "ftnstrip" should convert your fortran data into
C-like binary data.


Q:
>I am trying to plot data with the pswigb (pswigp, or xwigb)
>program.  I know that I have data with n1=NSAMP and n2=NTRACES
>but when I plot, I find that I have to set  n1=NSAMP+60 for the plot
>to look even remotely correct. What did I do wrong?

A:
It is likely that you are trying to plot with the wrong tool.
The input data format of the programs:
pswigb, pswigp, pscontour, pscube, psmovie, xwigb, xgraph, xmovie
all expect data to consist of simple floating point numbers.
If your data are SU data (SEG-Y) traces, then there is an additional
240 bytes of header on each trace, which is the same as 60 floats. 
To plot these data, use:
supswigb, supswigp, supscontour, supscube, supsmovie, suxwigb, suxgraph,
suxmovie

Also, it is not necessary to specify the dimensions of the data for these
programs. These codes construct the necessary information from the 
appropriate header values.
values.

Q:
>How do I read an SU data file with Promax?

A:
The short answer is that you make a SEGY tape on disk file.
To do convert a file called, say, "data.su" to a segy file
do the following:

% segyhdrs < data.su
% segywrite tape=data.segy < data.su

Now use Promax to read data.segy. This file is a
"Promax tape-on-disk file in IBM Real format."
Choose Promax menus accordingly.

Q:
>I have an SU datafile that I made under a release older than Release
>20. When I try to plot the data I have a problem. Why is this and
>how can I plot the data?

A:
The locally assigned header fields were changed between Release 19
and Release 20 to accomodate updates in the plotting programs.
Simply run your old data through segyclean to zero the locally assigned
fields:    
% segyclean < data.su.old > data.su.new


Q:
>I would like to strip the trace headers off of some SU data, perform
>an operation of some type on the bare traces and put the headers
>back on without losing any of the header information. How do I do this?
>

A:
Do the following:

sustrip < data.su head=headers > data.binary

(Do whatever was desired to data.binary to make data1.binary)

supaste < data1.binary head=headers > data1.su


Q. How do I make a SEGY tape from an SU data file?

A. The procedure for converting a file in the SU data type
   is as follows:
  
segyheaders < data.su

This will build the files "header" and  "binary" that will
become the respective ebcdic and binary tape reel headers.
The file "header" is an ascii file that may be edited with
any normal file editor. The "binary" file may be dumped 
to an ascii form via the program "bhedtopar". The resulting
parfile may be edited and used to update the binary file
with the program "setbhed".

Once the header and binary files are edited to your satisfaction,
you may use segywrite to write the segytape.

This is done via:

segywrite tape=/dev/rmt0 bfile=binary hfile=header < data.su 

There are additional options to segywrite. For example, if
you are making the tape from a little-endian machine (PC or DEC
product), you would set endian=0. Otherwise, the default is
endian=1 for most major IEEE platforms.

