This directory is devoted to illustrating dip filtering with
simple synthetics.

Demo Files
----------
XDip1:

Use the standard SU "test pattern" for data: suplane with its default
settings.  Note that in units of trace/timesample the default slopes
in suplane are 0, 1, 2, so that the middle reflector is spatially just
at Nyquist and the the steepest reflector is spatially aliased.

In this demo, we "fool the program" (see the sudipfilt self-doc) by
using nominal units dt=dx=1 in sudipfilt.  The data is created with
"physical" parameters of dt=4ms and assuming that trace spacing is
measured in km, sushw is used to set dx = d2 = 0.016km = 16m

Frame1: Plot the model 
Frame2: Use sudipfilt to zap the flat reflector
Frame3: Zap the middle reflector
Frame4: Try to zap the steep reflector with poor results (because
	this reflector is spatially aliased)
Frame5: F-K spectrum of data demonstrating the spatial aliasing
Frame6: Zap the steep reflector using the bias parameter in sudipfilt
-----
XDip2:

Continue the theme of zapping spatially aliased data with sudipfilt's
bias parameter, now doing a more difficult case where the transformed
reflectors cross.

Frame1: Plot the model
Frame2: Look at the F-K spectrum; note crossing of transformed reflectors
Frame3: Zap steep reflector by biasing actual slope 2 to slope 0
-----
XDip3:  Same as XDip1, but uses "physical" units for dt and dx.

-----
The PostScript files have the analogous names PSDip1, etc. and produce
.eps files

---------------------------------------------------------------
Relevant Self-Doc:

> sudipfilt

 SUDIPFILT - DIP--or better--SLOPE Filter in f-k domain 
                                                                
 sudipfilt <infile >outfile [optional parameters]               
                                                                
 ...                             
