This is the main directory devoted to teaching the use of susort.
It contains 2 subdirectories:

Tutorial - has X and PS tutorials.  These give a screenful of
	   information and pause to let you digest it.  You have to press
	   the return key to continue the tutorial (you're prompted to do
	   this).  It can be taxing to get through one of these things,
	   particularly in X where everytime the tutorial pops up a graphic,
	   you have to click to get back into the main window to read about
	   what happened.  So, it's something you'd only want to do once or
	   twice.  The up side of the tutorials is that they discuss some
	   of the crucial side issues in context (e.g, how to window
	   data sets to full fold before doing a cdp sort).
	   If you are new to SU, please read "The SU User's Manual" for basic
	   information.  Remarks: (1) The PS version of the tutorial requires
           display postscript, (2) the demos leave the created data
	   sets in this directory so you can examine them.  The
	   "Clean" shell script destroys these files.

Demo - has X and PS demos.  These do not talk at you, the X version
           just pops up several examples of sorting, while the PS version just
           creates encapsulated postscript files.  Here the demo scripts are
           meant to be read, so you can clone what you need for your
           application.  The demos are useful to jog your memory, but perhaps
           are not enough for the complete novice who should slowly go through
	   the tutorial.  Also see the Select Demo, since sorting and
	   selecting are often interlinked.
	   
For real examples, see Cdpsort, Cos, Dmo in the CWPROOT/src/su/examples
	subdirectory.


Jack--06/95


---------------------------------------------------------------
NOTES:  susort calls on the system's qsort (quicksort) routine.
That's how it can let you specify any number of sort keys even
though its author knew nothing about sorting.  To read about the
possible sort keys, type:
% sukeyword

To see what fields are set in the data, type:
% surange <indata

To examine particular fields, type something like:
% sugethw <indata cdp offset sx gx | more

CAUTION: Be careful about sorting to cdp's with a command like:

susort <indata cdp >outdata

In most cases, you really want the offsets IN ORDER within cdp's.
Since they were in order in the shot gathers, it's natural to
assume that they'll remain in order.  And they might.  But many
quicksorts will change the order.  Anyway, don't take chances, use

susort <indata cdp offset >outdata
or
susort <indata cdp -offset >outdata

to get respectively increasing or decreasing offset order in outdata.  The
tutorial discusses this point at greater length.

---------------------------------------------------------------
Relevant Self-Docs:

> susort

 SUSORT - sort on any segy header keywords                      
                                                                
 susort <stdin >stdout [[+-]key1 [+-]key2 ...]                  
                                                                
 ...                     
                                                                
> surange
                                                              
 SURANGE - get max and min values for non-zero header entries   
                                                                
 surange <stdin                                         
                                                                
 ...

> sugethw
                                                             
 SUGETHW - sugethw writes the values of the selected key words  
                                                                
 sugethw key1 key2 ... [output=] <infile [>outfile]             
                                                                
 ...

> suwind
                                                            
 SUWIND - window traces by key word                                    
                                                                       
 suwind <stdin >stdout [options]                                       
                                                                       
 ...         

> sustack

 SUSTACK - stack adjacent traces having the same key header word
                                                                
 sustack <input >output key=cdp normpow=1.0 verbose=0           
                                                                
 ...

> susynlv

 SUSYNLV - SYNthetic seismograms for Linear Velocity function           
                                                                        
 susynlv >outfile [optional parameters]                         
                                                                        
 ...    
   
