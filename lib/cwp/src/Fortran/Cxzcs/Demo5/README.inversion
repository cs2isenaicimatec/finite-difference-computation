Extra files: located in ../Cxzcs/Demo6/inversion.dir
getcosines.f	-- A fortran program that computes the exact specular
		   reflection angle, or more precisely, their cosines.

Makefile	-- makefile for getcosines.f


Note on computing the speeds:

The formula for the acoustic reflection coefficient with specular
angle theta is:

	R = ( cos(theta) - Sqrt[(c_below/c_above)^2 - sin^2(theta) ) /
	    ( cos(theta) + Sqrt[(c_below/c_above)^2 - sin^2(theta) )

which yields:

	c_below = c_above / Sqrt[1 - 4 R cos^2(theta)/(1 + R)^2]

Now we just need to get the requisite data from the binary files
produced by the Inversion shell in this directory.  This would be
a little easier in practice with SU, but here we can manage nicely
with just the basic CWP tools since we know the location of the
reflectors, etc.

As you will see, the results are far more accurate than could be
obtained in practice--we have created an extremely favorable example
to avoid a number of distracting side issues.  More on this following
the discussion of our example.

We can get the first layer cosine from the binary file cos1:

od -f <cos1 
0000000   8.2037008e-01  8.2036996e-01  8.2036990e-01  8.2036990e-01
0000020   8.1902778e-01  8.1902766e-01  8.1902784e-01  8.1902778e-01
0000040   8.1902784e-01  8.1682408e-01  8.1682420e-01  8.1682414e-01
0000060   8.1682414e-01  8.1682390e-01  8.1700748e-01  8.1700754e-01
0000100   8.1700772e-01  8.1700766e-01  8.1700772e-01  8.1747168e-01
0000120   8.1747168e-01  8.1747162e-01  8.1747162e-01  8.1747156e-01
0000140   8.1747156e-01  8.1747150e-01  8.1747162e-01  8.1747162e-01
0000160   8.1747162e-01  8.1747162e-01  8.1747162e-01  8.1747162e-01
0000200   8.1747162e-01  8.1747156e-01  8.1747156e-01  8.1747150e-01
0000220   8.1747162e-01  8.1747162e-01  8.1747162e-01  8.1679565e-01
0000240   8.1750453e-01  8.1750453e-01  8.1750453e-01  8.1750453e-01
0000260   8.1714147e-01  8.1919879e-01  8.1919879e-01  8.1919879e-01
0000300   8.1919879e-01  8.2034475e-01  8.1876642e-01  8.1876642e-01
0000320   8.1876642e-01  8.1876642e-01  8.2174629e-01  8.2198858e-01
0000340   8.2198858e-01  8.2198858e-01  8.2198858e-01  8.1957781e-01
0000360

So the first layer cosine is .817 (which we can also get accurately
enough from the xgraph produced by the demo).

We can get the second layer cosine from the binary file cos2:

od -f <cos1 
0000000   9.0705210e-01  9.0705228e-01  9.0705222e-01  9.0705228e-01
0000020   9.0619093e-01  9.0619105e-01  9.0619105e-01  9.0619105e-01
0000040   9.0619111e-01  9.0606230e-01  9.0606225e-01  9.0606219e-01
0000060   9.0606225e-01  9.0606219e-01  9.0548080e-01  9.0548080e-01
0000100   9.0548104e-01  9.0548086e-01  9.0548098e-01  9.0578628e-01
0000120   9.0578634e-01  9.0578616e-01  9.0578640e-01  9.0578610e-01
0000140   9.0592480e-01  9.0611410e-01  9.0611434e-01  9.0611398e-01
0000160   9.0611428e-01  9.0578210e-01  9.0600073e-01  9.0600061e-01
0000200   9.0600073e-01  9.0600061e-01  9.0546435e-01  9.0567309e-01
0000220   9.0567327e-01  9.0567309e-01  9.0567327e-01  9.0605825e-01
0000240   9.0544575e-01  9.0544564e-01  9.0544575e-01  9.0544564e-01
0000260   9.0633726e-01  9.0613437e-01  9.0613449e-01  9.0613437e-01
0000300   9.0613449e-01  9.0704882e-01  9.0663737e-01  9.0663725e-01
0000320   9.0663737e-01  9.0663725e-01  9.0718222e-01  9.0708506e-01
0000340   9.0708518e-01  9.0708506e-01  9.0708518e-01  9.0643215e-01
0000360

So the second layer cosine is .906 (which we can also get accurately
enough from the xgraph produced by the demo).

The file "reflect" has the reflection coefficients, we can use the
CWP program subset to look at the first layer for the middle 5 traces:

subset <reflect n1=301 n2=80 if1s=60 n1s=1 if2s=38 n2s=5 |
od -f >rc1
0000000   1.3710551e-01  1.3710549e-01  1.3710551e-01  1.3710549e-01
0000020   1.3710551e-01
0000024

Thus, the reflection coefficient for the first layer is about .137,
similarly looking at the second layer for the middle 5 traces:

subset <reflect n1=301 n2=80 if1s=100 n1s=1 if2s=38 n2s=5 |
od -f >rc2
0000000   9.3112931e-02  9.3112946e-02  9.2245363e-02  9.3191706e-02
0000020   9.3191691e-02
0000024

So the second layer reflection coefficient is about .093.

The values, R = .137, cos(theta) = .817, c_above = 5000, yield the
estimate:
	c_below = 5905 (layer 1)
compared with the true value, 6000, for an error of 1.6%.

The values, R = .093, cos(theta) = .906, c_above = 6000, yield the
theoretical estimate:
	c_below = 6954 (layer 2)
compared with the true value, 7000, for an error of 0.7%.  However,
in a real example, we would take c_above as the estimate obtained
for the first layer, namely c_above = 5905, which gives the estimate:
	c_below = 6843 (layer 2)
compared with the true value, 7000, for an error of 2.2%.


A note about real life:
As remarked earlier, this example is extremely favorable.  With 2
horizontal layers, we could force the interfaces onto grid points,
thus guaranteeing that the peak reflections fell were seen without
the need for sinc interpolation.  Perhaps, more importantly, with
this simple geometry, the interpolations done to speed up the inversion
do not significantly degrade the results.  In practice one might well
need to re-invert in some small windows with less or no interpolation
to get accurate reflection coefficient data for parameter estimation.
